from typing import Iterable


class AsyncFileIO:
    async def close(self) -> None:
        ...
    async def fileno(self) -> int:
        ...
    async def flush(self) -> None:
        ...
    async def isatty(self) -> bool:
        ...
    async def read(self, length: int=-1) -> bytes:
        ...
    async def readable(self) -> bool:
        ...
    async def readall(self) -> bytes:
        ...
    async def readinto(self, b: bytearray) -> int:
        ...
    async def readline(self) -> bytes:
        ...
    async def readlines(self) -> Iterable[bytes]:
        ...
    async def seek(self, offset: int, whence: int=0) -> int:
        ...
    async def seekable(self) -> bool:
        ...
    async def tell(self) -> int:
        ...
    async def truncate(self) -> None:
        ...
    async def writable(self) -> bool:
        ...
    async def write(self, data: bytes) -> int:
        ...
    async def writelines(self, lines: Iterable[bytes]) -> None:
        ...
